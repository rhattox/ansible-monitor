- name: Update APT package cache
  ansible.builtin.apt:
    update_cache: true

- name: Install prerequisites for loki
  ansible.builtin.apt:
    name:
      - curl
    state: present

- name: Create service user
  block:
    - name: Create monitor group
      ansible.builtin.group:
        name: "{{ monitor_group }}"
        state: present

    - name: Create monitor user
      ansible.builtin.user:
        name: "{{ monitor_user }}"
        group: "{{ monitor_group }}"
        createhome: false

- name: Create monitor home directory
  ansible.builtin.file:
    path: "{{ loki_home }}"
    state: directory
    owner: "{{ monitor_user }}"
    group: "{{ monitor_group }}"
    mode: "0755"

- name: Download and Extract
  block:
    - name: Download monitor tar file
      ansible.builtin.get_url:
        url: "{{ loki_url }}"
        dest: "{{ loki_tmp_file }}"
        mode: "0755"

    - name: Create temporary directory
      ansible.builtin.file:
        path: "{{ loki_tmp_path }}"
        state: directory
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"
        mode: "0755"

    - name: Extract monitor archive to temporary path
      ansible.builtin.unarchive:
        src: "{{ loki_tmp_file }}"
        dest: "{{ loki_tmp_path }}"
        remote_src: true

- name: Update the path and installs loki
  block:
    - name: Copy loki to path from temporary path
      ansible.builtin.copy:
        src: "{{ loki_tmp_path }}/"
        dest: "{{ loki_home }}"
        remote_src: true
        mode: "0755"
        owner: "{{ monitor_user }}"
        group: "{{ monitor_group }}"

    - name: Creates Symlink Loki
      ansible.builtin.file:
        src: "{{ loki_home }}/loki-linux-amd64"
        dest: "/usr/bin/loki"
        mode: "0777"
        owner: "{{ monitor_user }}"
        group: "{{ monitor_group }}"
        state: link

- name: Configure loki to work on my environment
  block:
    - name: Generate SystemD Config
      ansible.builtin.template:
        src: roles/loki/templates/loki.service.j2
        dest: "/etc/systemd/system/loki.service"
        group: "{{ monitor_group }}"
        owner: "{{ monitor_user }}"
        mode: "0755"

    - name: Generate Loki Config
      ansible.builtin.template:
        src: roles/loki/templates/loki.config.j2
        dest: "{{ loki_full_path }}/loki-config.yaml"
        group: "{{ monitor_group }}"
        owner: "{{ monitor_user }}"
        mode: "0755"

    - name: Generate Promtail Config
      ansible.builtin.template:
        src: roles/loki/templates/promtail.config.j2
        dest: "{{ loki_full_path }}/promtail-local-config.yaml"
        group: "{{ monitor_group }}"
        owner: "{{ monitor_user }}"
        mode: "0755"

- name: Restart systemd daemon
  become: true
  ansible.builtin.shell: |
    systemctl daemon-reload

- name: Restart Loki service
  become: true
  ansible.builtin.service:
    name: loki
    state: started
    enabled: true

- name: Delete folder
  become: true
  ansible.builtin.file:
    path: "{{ loki_tmp_path }}"
    state: absent
